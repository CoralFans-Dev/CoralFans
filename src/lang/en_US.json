{
    "command": {
        "func": {
            "description": "Globally controls functions of CoralFans Mod",
            "forceopen": {
                "success": "globally set forceopen \"{}\"",
                "error": "failed to globally set forceopen"
            },
            "forceplace": {
                "success": "globally set forceplace \"{}\"",
                "error": "failed to globally set forceplace"
            },
            "noclip": {
                "success": "globally set noclip \"{}\"",
                "error": "failed to globally set noclip"
            },
            "droppernocost": {
                "success": "globally set droppernocost \"{}\"",
                "error": "failed to globally set droppernocost"
            },
            "safeexplode": {
                "success": "globally set safeexplode \"{}\"",
                "error": "failed to globally set safeexplode"
            },
            "hsa": {
                "success": "globally set hsa \"{}\"",
                "error": "failed to globally set hsa"
            },
            "autotool": {
                "success": "globally set autotool \"{}\"",
                "error": "failed to globally set autotool"
            },
            "hoppercounter": {
                "success": "globally set hoppercounter \"{}\"",
                "error": "failed to globally set hoppercounter"
            }
        },
        "self": {
            "description": "Controls functions of CoralFans Mod",
            "noclip": {
                "success": "set noclip \"{}\"",
                "error": "failed to set noclip"
            },
            "autotool": {
                "success": "set autotool \"{}\"",
                "error": "failed to set autotool",
                "mindamage": {
                    "success": "set autotool mindamage \"{}\"",
                    "error": "failed to set autotool mindamage"
                }
            }
        },
        "tick": {
            "description": "Controls or queries the tick status of the game",
            "query": {
                "output": "{} per tick"
            },
            "set": {
                "output": "set tick {}"
            },
            "rate": {
                "success": "set {} tick(s) per second",
                "error": "rate must be non negative"
            },
            "step": {
                "output": "step {} tick(s)"
            }
        },
        "hsa": {
            "description": "Show HSA",
            "show": {
                "success": "set showhsa \"{}\"",
                "error": "failed to set showhsa"
            }
        },
        "counter": {
            "description": "Hopper counter",
            "print": {
                "error": "Cannot get hoppercounter channel"
            },
            "reset": {
                "success": "reset hoppercounter channel {}",
                "error": "failed to reset hoppercounter channel {}"
            }
        }
    },
    "function": {
        "hoppercounter": {
            "info": {
                "nodata": "no data",
                "introduction": "Channel: §l{}§r\n§l{}§r items (§l{}§r/h) in §l{}§r gt (§l{}§rh)\n§l{}§r items (§l{}§r/h) in last 1 min"
            }
        }
    }
}